<launch>

  <!-- Launch Settings -->
  <arg name='robot' default='0' doc='Argument to specify which robot is being used. 0 to uses local machine'/>
  <arg name='with_rviz' default="False" doc="launch everything with/without rviz. There is a noticable difference in perfomance with it running. Defaults to without (False)."/>

  <!-- Load YAML Files -->
  <rosparam command="load" file="$(find nuturtle_description)/config/diff_params.yaml"/>
  <rosparam command="load" file="$(find rigid2d)/config/frame_link_names.yaml"/>
  <rosparam command="load" file="$(find nuturtle_robot)/config/traj_params.yaml"/>

  <!-- Set up host machine and start serial communications -->
  <include file="$(find nuturtle_robot)/launch/basic_remote.launch">
    <arg name="robot" value="$(arg robot)"/>
  </include>

  <!-- Launch interface node to the turtlebot -->
  <node name="turtle_interface" pkg="nuturtle_robot" type="turtle_interface" machine="turtlebot" output="screen"/>

  <!-- Launch waypoints node to pubish velocities -->
  <node name="real_waypoints" pkg="nuturtle_robot" type="real_waypoints" machine="turtlebot" output="screen"/>

  <!-- Launch odometer node to track the turtlebot encoders -->
  <node name="odometer" pkg="rigid2d" type="odometer" machine="turtlebot">
    <rosparam command="load" file="$(find rigid2d)/config/frame_link_names.yaml"/>
  </node>

  <!-- Publish the robot urdf -->
  <param name="robot_description" command="xacro '$(find nuturtle_description)/urdf/diff_drive.urdf.xacro'" />
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/>

  <!-- Launch rviz as a required node -->
  <node name="rviz" pkg="rviz" type="rviz" required="true" args="-d $(find nuturtle_description)/config/odom_view.rviz" if="$(arg with_rviz)"/>

  <!-- Simulate encoders for perfect feed forward control -->
  <node name="fake_diff_encoders" pkg="rigid2d" type="fake_diff_encoders" machine="turtlebot" output="screen">
    <remap from="turtle1/cmd_vel" to="/cmd_vel"/>
    <remap from="joint_states" to="fake/joint_states"/>
  </node>

  <!-- Track the simulated encoders -->
  <group ns="fake">
    <node name="odometer" pkg="rigid2d" type="odometer" machine="turtlebot" output="screen">
      <param name="odom_frame_id" value="fake_odom"/>
      <param name="base_frame_id" value="fake_base_link"/>
      <param name="left_wheel_joint" value="left_wheel_axel"/>
      <param name="right_wheel_joint" value="right_wheel_axel"/>
    </node>
  </group>

  <!-- Link the simulated robot to the real robot -->
  <node pkg="tf2_ros" type="static_transform_publisher" name="static_transform_publisher" args="0 0 0 0 0 0 1 odom fake_odom" />

</launch>
